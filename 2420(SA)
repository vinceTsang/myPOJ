#include <iostream>
#include <stdio.h>
#include <math.h>
#include <time.h>
#include <stdlib.h>
#include <cstring>
using namespace std;
const int MAXN=10010;
const double PI=acos(-1.0);
struct Point{
    double x,y;
    void input(){
        scanf("%lf%lf",&x,&y);
    }
    double distance(Point b){
        return sqrt( (x-b.x)*(x-b.x) + (y-b.y)*(y-b.y) );
    }
}p[MAXN],tp[50];
double dist[50];
int n;
double calc(Point p0){
    double sum=0;
    for(int i=0; i<n; i++){
        sum+=p[i].distance(p0);
    }
    return sum;
}
int main(){
    double X=10000,Y=10000;
    int i,j;
    srand(time(NULL));
    int P=10, L=30;
    scanf("%d",&n);
    for(i=0;i<n;i++) p[i].input();
    for(i=0;i<P;i++){
        tp[i].x=( rand()%1000+1 ) / 1000.0 * X;
        tp[i].y=( rand()%1000+1 ) / 1000.0 * Y;
        dist[i]=calc(tp[i]);
    }
    double step = sqrt( X*X + Y*Y ) / 4;
    while(step > 1e-5){
        for(i=0;i<P;i++){
            Point cur, pre=tp[i];
            for(j=0;j<L;j++){
                double angle=( rand()%1000+1 ) / 1000.0 * 2 * PI;
                cur.x=pre.x + cos(angle) * step;
                cur.y=pre.y + sin(angle) * step;
                if(cur.x < 0 || cur.x > X || cur.y < 0 || cur.y > Y) continue;
                double tmp = calc(cur);
                if(tmp<dist[i]){
                    tp[i] = cur;
                    dist[i] = tmp;
                }
            }
        }
        step *= 0.8;
    }
    double ans=1e20;
    for(i=0;i<P;i++){
        ans=min(ans,dist[i]);
    }
    printf("%.0lf\n",ans);
}
