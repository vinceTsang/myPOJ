/**
 * 因为只有1和2两个组,所有不必用nlog(n)复杂度的LIS
 * dp复杂度n
 * dp[i][1]表示第i个位置放1则此前一共需要改动的次数,2同理
 * 放1则前面只能是1
 * 放2则前面既能是1也能是2
 * dp[i][1]=dp[i-1][1]+g[i]-1
 * dp[i][2]=min(dp[i-1][1],dp[i-1][2])+2-g[i]
 */
#include <iostream>
#include <stdio.h>
using namespace std;
inline int min(int a, int b){ return a < b ? a : b; }
int dp[30002][2];
int main(){
    int n,i,tmp;
    scanf("%d",&n);
    scanf("%d",&tmp);
    if(tmp==1){
        dp[0][1]=0;
        dp[0][2]=1;
    }else{
        dp[0][1]=1;
        dp[0][2]=0;
    }
    for(i=1;i<n;i++){
        scanf("%d",&tmp);
        dp[i][1]=dp[i-1][1] + tmp - 1;
        dp[i][2]=min(dp[i-1][1],dp[i-1][2]) + 2- tmp;
    }
    printf("%d\n",min(dp[n-1][1],dp[n-1][2]) );
}
